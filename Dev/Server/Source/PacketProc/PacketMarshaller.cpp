////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// \file PacketMarshaller.cpp
/// \author 
/// \date 2014.10.24
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

#include "PacketMarshaller.h"

#include "Base/AsyncTcpPeer.h"

#include "PacketHandler.h"
#include "PacketManager.h"

#include "Packet/PacketBase.h"

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// \brief 생성자
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
CPacketMarshaller::CPacketMarshaller(PacketGroup g)
:
m_PacketGroup(g)
{
	SafeGuard();
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// \brief 소멸자
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
CPacketMarshaller::~CPacketMarshaller()
{
	SafeGuard();
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// \brief 패킷을 쓴다.
/// \param buf 버퍼 
/// \param total 길이
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
void CPacketMarshaller::Marshall(char* buf, int len)
{
	SafeGuard();
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// \brief 패킷을 읽는다.
/// \param buf 버퍼
/// \return int 읽은 길이
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
int CPacketMarshaller::UnMarshall(CAsyncTcpPeer* peer, char* buf, int total)
{
	SafeGuard();

	int handled = 0;
	
	do 
	{
		// 헤더 넘게 왔나?
		if (total < CPacket::PACKET_HEADER_LENGTH)
			break;

		// 패킷 Id
		PacketId_t id = *CPacket::GetPacketIdPtr(buf);

		// 패킷 size
		PacketSize_t size = *CPacket::GetPacketSizePtr(buf);

		// 패킷 정보의 맥스 바이트보다 큰지 검사

		
		// 패킷 사이즈 만큼 왔나?
		if (total < size)
			break;

		int payload = size - CPacket::PACKET_HEADER_LENGTH;

		// 핸들러 찾고 처리
		CPacketHandler* handler = g_PacketManager->GetHandler(m_PacketGroup, id);
		if (handler)
		{
			handled = handler->Execute(peer, buf + CPacket::PACKET_HEADER_LENGTH, payload);
			handled += CPacket::PACKET_HEADER_LENGTH;
		}
		else
		{
			TRACE(_T("handler isn't exist (hander id : %a)"), id);
		}		

	} while (0);

	return handled;
}

