////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// \file RefCountable.cpp
/// \author bjh1371
/// \date 2015/07/02
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

#include "RefCountable.h"

#include "Lifespan.h"

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// \brief 생성자
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
CRefCountable::CRefCountable()
{
	SafeGuard();
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// \brief 소멸자
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
CRefCountable::~CRefCountable()
{
	SafeGuard();
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// \brief 레퍼카운트 감소
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
int CRefCountable::DecreaseRefCount(Refcount refcount)
{
	SafeGuard();

	return --m_RefCountArray[refcount];
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// \brief 레퍼카운트 증가
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
int CRefCountable::IncreaseRefCount(Refcount refcount)
{
	SafeGuard();

	return ++m_RefCountArray[refcount];
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// \brief 
/// \return bool 
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
bool CRefCountable::IsSafeToDelete() const
{
	SafeGuard();

	bool result = true;
	
	// 어플리케이션 강제 종료중일때는 레퍼체크안함
	if (IsAppRunning())
	{
		for (int i = 0; i < REFCOUNT_MAX; ++i)
		{
			if (m_RefCountArray[i] != 0)
			{
				result = false;
				break;
			}
		}
	}

	return result;
}