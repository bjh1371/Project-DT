////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// \file Thread.h
/// \author bjh1371
/// \date 2015/09/04
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

#pragma once

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// \class CThread
/// \brief 쓰레드 캡슐화한 클래스
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

class CThread
{
private:
	std::thread m_Thread; ///< 쓰레드 객체


public:
	/// \brief 생성자
	CThread();
	
	/// \brief 소멸자
	virtual ~CThread();
	
	
public:
	/// \brief 쓰레드 시작
	void Start();

	/// \brief 정지
	virtual void Stop() = 0;


public:
	/// \brief 쓰레드가 끝날때까지 기다린다.
	void Join();

	/// \brief 쓰레드 핸들을 분리한다.
	void Detach();


private:
	/// \brief 스레드 메인
	void ThreadProxy();

	/// \brief 실제 작업할 함수
	virtual void ThreadMain() = 0;
};