////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// \file AsyncTimerEvent.cpp
/// \author bjh1371
/// \date 2015/07/02
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

#include "AsyncTimerEvent.h"

#include "AsyncEventSink.h"
#include "AsyncTimerRegistry.h"

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// \brief 생성자
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
CAsyncTimerEvent::CAsyncTimerEvent()
:
m_Sink(nullptr),
m_Activation(0),
m_Expiration(0),
m_Interval(0)
{
	SafeGuard();
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// \brief 소멸자
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
CAsyncTimerEvent::~CAsyncTimerEvent()
{
	SafeGuard();
}


////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// \brief 타이머를 실행한다.
/// \param bool success 성공 여부
/// \param DWORD transferred 0이어야됨
/// \param CAsyncEventSink * sink 해당 싱크
/// \return void
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
void CAsyncTimerEvent::Execute(bool success, DWORD transferred, ULONG_PTR target)
{
	SafeGuard();

	bool repost = false;

	CAsyncEventSink* sink = reinterpret_cast<CAsyncEventSink*>(target);

	if (success && !sink->IsPendingDeletion())
	{
		sink->OnTimer(this);
		repost = Clock::GetCurrentMilli() < m_Expiration;
	}

	if (repost)
	{
		m_Activation += m_Interval;
		// 타이머 레지스트리에 추가
		g_AsyncTimerRegistry->Add(this);
	}
	else
	{
		sink->DecreaseRefCount(CAsyncEventSink::REFCOUNT_TIMER);
		
		if (DecreaseRefCount() == 0)
			xdelete(this);
	}
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// \brief 다음틱이 오면 정지한다.
/// \return void
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
void CAsyncTimerEvent::Stop()
{
	SafeGuard();

	m_Expiration = 0;
}
