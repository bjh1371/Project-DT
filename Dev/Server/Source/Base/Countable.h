////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// \file Countable.h
/// \author bjh1371
/// \date 2015/01/07
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

#pragma once

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// \class CCountable
/// \brief 카운트를 세기위한 클래스
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

template <typename T>
class CCountable
{
private:
	static volatile long m_InstanceCount; ///< 인스턴스 카운트

public:
	/// \brief 생성자
	CCountable()
	{
		SafeGuard();

		_InterlockedIncrement(&m_InstanceCount);
	}
	
	/// \brief 소멸자
	virtual ~CCountable()
	{
		SafeGuard();

		_InterlockedDecrement(&m_InstanceCount);
	}
	
	
public:
	static long GetInstacneCount() { return m_InstanceCount; }
};

template <typename T>
volatile long CCountable<T>::m_InstanceCount = 0;