////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// \file AsyncTcpSendEvent.cpp
/// \author bjh1371
/// \date 2015/09/13
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

#include "AsyncTcpSendEvent.h"

#include "AsyncTcpSocket.h"

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// \brief 생성자
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
CAsyncTcpSendEvent::CAsyncTcpSendEvent(int maxCount)
:
m_WsaBufArray(nullptr),
m_CurrentCount(0),
m_MaxCount(maxCount),
m_TotalBytes(0),
m_SendArray()
{
	SafeGuard();

	m_WsaBufArray = xnew_array(WSABUF, maxCount);
	for (int i = 0; i < maxCount; ++i)
	{
		m_SendArray[i] = nullptr;
	}
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// \brief 소멸자
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
CAsyncTcpSendEvent::~CAsyncTcpSendEvent()
{
	SafeGuard();

	Clear();

	Generic::SafeDeleteArray(m_WsaBufArray);
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// \brief 실행한다.
/// \param bool success 성공 여부
/// \param DWORD transferred 실행할 바이트
/// \param ULONG_PTR target 타겟
/// \return void
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
void CAsyncTcpSendEvent::Execute(bool success, DWORD transferred, ULONG_PTR target)
{
	SafeGuard();

	CAsyncTcpSocket* socket = reinterpret_cast<CAsyncTcpSocket*>(target);

	// socket->OnSendEvent(success, transferred, this);
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// \brief SendEvent를 추가한다.
/// \param CAsyncTcpEvent * evt 추가할 이벤트
/// \return bool 추가했으면 true
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
bool CAsyncTcpSendEvent::Add(CAsyncTcpEvent* evt)
{
	SafeGuard();

	bool result = false;

	if (m_CurrentCount < m_MaxCount)
	{
		m_WsaBufArray[m_CurrentCount] = evt->m_WsaBuf;
		m_SendArray[m_CurrentCount] = evt;

		evt->IncreaseRefCount();

		m_TotalBytes += evt->m_TotalBytes;

		++m_CurrentCount;

		result = true;
	}

	return result;
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// \brief 
/// \return void
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
void CAsyncTcpSendEvent::Clear()
{
	SafeGuard();

	for (int i = 0; i < m_CurrentCount; ++i)
	{
		CAsyncTcpEvent* evt = m_SendArray[i];
		if (evt->DecreaseRefCount() == 0)
		{
			CAsyncTcpEvent::Dealloc(evt);
		}
	}

	m_CurrentCount = 0;
	m_TotalBytes = 0;
}
